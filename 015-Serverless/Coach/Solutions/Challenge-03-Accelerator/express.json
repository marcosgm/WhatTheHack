{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "6290113384417938630"
    }
  },
  "parameters": {
    "rgName": {
      "type": "string",
      "defaultValue": "wth-serverless-test"
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the Key Vault."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "resourcePrefix": "wth-serverless",
    "cosmosDbAccountName": "[format('{0}-cosmosdb-{1}', variables('resourcePrefix'), uniqueString(resourceGroup().id))]",
    "storageAccountName": "[format('wth{0}', uniqueString(resourceGroup().id))]",
    "keyVaultName": "[format('wth-kv-{0}', uniqueString(resourceGroup().id))]",
    "computerVisionServiceName": "[format('{0}-ocr', variables('resourcePrefix'))]",
    "eventGridTopicName": "[format('{0}-topic-{1}', variables('resourcePrefix'), uniqueString(resourceGroup().id))]",
    "funcStorageAccountName": "[format('func{0}', uniqueString(resourceGroup().id))]",
    "hostingPlanName": "[format('{0}-hostingplan', variables('resourcePrefix'))]",
    "functionTollBoothApp": "[format('{0}-app-{1}', variables('resourcePrefix'), uniqueString(resourceGroup().id))]",
    "functionTollBoothEvents": "[format('{0}-events-{1}', variables('resourcePrefix'), uniqueString(resourceGroup().id))]",
    "linuxFxVersion": "DOTNET-ISOLATED|8.0",
    "roleDefinitionID": "4633458b-17de-408a-b874-0445c86b69e6",
    "roleAssignmentKVAppName": "[guid(resourceId('Microsoft.Web/sites', variables('functionTollBoothApp')), variables('roleDefinitionID'), resourceGroup().id)]",
    "roleAssignmentKVEventsName": "[guid(resourceId('Microsoft.Web/sites', variables('functionTollBoothEvents')), variables('roleDefinitionID'), resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-06-15",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[variables('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[variables('location')]",
            "failoverPriority": 0
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-06-15",
      "name": "[format('{0}/{1}', variables('cosmosDbAccountName'), 'LicensePlates')]",
      "properties": {
        "resource": {
          "id": "LicensePlates"
        },
        "options": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-06-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbAccountName'), 'LicensePlates', 'Processed')]",
      "properties": {
        "resource": {
          "id": "Processed",
          "partitionKey": {
            "paths": [
              "/licensePlateText"
            ],
            "kind": "Hash"
          }
        },
        "options": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), 'LicensePlates')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-06-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbAccountName'), 'LicensePlates', 'NeedsManualReview')]",
      "properties": {
        "resource": {
          "id": "NeedsManualReview",
          "partitionKey": {
            "paths": [
              "/fileName"
            ],
            "kind": "Hash"
          }
        },
        "options": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), 'LicensePlates')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'images')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'export')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.EventGrid/topics",
      "apiVersion": "2023-12-15-preview",
      "name": "[variables('eventGridTopicName')]",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[variables('location')]",
      "properties": {
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enableRbacAuthorization": true,
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'EventGridTopicKey')]",
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName')), '2023-12-15-preview').key1]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'CosmosDBAuthorizationKey')]",
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2021-06-15').primaryMasterKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'CosmosDBConnectionString')]",
      "properties": {
        "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2021-06-15').connectionStrings[0].connectionString]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'BlobStorageConnection')]",
      "properties": {
        "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('funcStorageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "AppInsights-Serverless",
      "location": "[variables('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('functionTollBoothApp')]",
      "location": "[variables('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "reserved": true,
        "siteConfig": {
          "linuxFxVersion": "[variables('linuxFxVersion')]",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionTollBoothApp'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_DOTNET_DEFAULT_VERSION",
              "value": "8"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', 'AppInsights-Serverless'), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "eventGridTopicEndpoint",
              "value": "[reference(resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName')), '2023-12-15-preview').endpoint]"
            },
            {
              "name": "eventGridTopicKey",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/eventGridTopicKey/)', reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri)]"
            },
            {
              "name": "cosmosDBEndPointUrl",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2021-06-15').documentEndpoint]"
            },
            {
              "name": "cosmosDBAuthorizationKey",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/cosmosDBAuthorizationKey/)', reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri)]"
            },
            {
              "name": "cosmosDBDatabaseId",
              "value": "LicensePlates"
            },
            {
              "name": "cosmosDBCollectionId",
              "value": "Processed"
            },
            {
              "name": "exportCsvContainerName",
              "value": "export"
            },
            {
              "name": "blobStorageConnection",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/blobStorageConnection/)', reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri)]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', 'AppInsights-Serverless')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('functionTollBoothEvents')]",
      "location": "[variables('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "reserved": true,
        "siteConfig": {
          "linuxFxVersion": "NODE|18",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionTollBoothEvents'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~18"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', 'AppInsights-Serverless'), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "cosmosDBConnectionString",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/cosmosDBConnectionString/)', reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri)]"
            }
          ],
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', 'AppInsights-Serverless')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[variables('roleAssignmentKVAppName')]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionID'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionTollBoothApp')), '2023-01-01', 'full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionTollBoothApp'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[variables('roleAssignmentKVEventsName')]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionID'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionTollBoothEvents')), '2023-01-01', 'full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionTollBoothEvents'))]"
      ]
    }
  ]
}